/* –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ —É—Ä–æ–∫:

1) –ü–µ—Ä–≤—É—é —á–∞—Å—Ç—å –∑–∞–¥–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ —É—Ä–æ–∫—É

2) –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é showMyDB, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ privat. –ï—Å–ª–∏ —Å—Ç–æ–∏—Ç –≤ –ø–æ–∑–∏—Ü–∏–∏
false - –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –≥–ª–∞–≤–Ω—ã–π –æ–±—ä–µ–∫—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã

3) –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é writeYourGenres –≤ –∫–æ—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç 3 —Ä–∞–∑–∞ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å
"–í–∞—à –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º ${–Ω–æ–º–µ—Ä –ø–æ –ø–æ—Ä—è–¥–∫—É}". –ö–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö
genres

P.S. –§—É–Ω–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ*/

// 'use strict';

// –ö–æ–¥ –≤–æ–∑—å–º–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è

// let numberOfFilms;

// function start(){
// 	numberOfFilms = +prompt('–°–∫–æ–ª—å–∫–æ —Ñ–∏–ª—å–º–æ–≤ –≤—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏?', '');

// 	while(numberOfFilms == '' || numberOfFilms == null || isNaN(numberOfFilms)) {
// 		numberOfFilms = +prompt('–°–∫–æ–ª—å–∫–æ —Ñ–∏–ª—å–º–æ–≤ –≤—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏?', '');
// 	}
// }
// start();

// const personalMovieDB = {
//   count: numberOfFilms,
//   movies: {},
//   actors: {},
//   genres: [],
//   privat: false,
// };

// function rememberMyFilms(){
// 	for (let i = 0; i < 2; i++){

// 	  const a = prompt('–û–¥–∏–Ω –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤?', '').trim(),
// 	        b = prompt('–ù–∞ —Å–∫–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∏—Ç–µ –µ–≥–æ?', '');

// 	  if (a != null && b != null && a != '' && b != '' && a.length < 50 ){
// 	    personalMovieDB.movies[a] = b;
// 	    console.log('done');
// 	  } else {
// 	    console.log('error');
// 	    // –ü—Ä–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–∏–∏ –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ —É—Å–ª–æ–≤–∏–π –º—ã:
// 	    // –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —É–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
// 	    // –∏—Ç–µ—Ä–∞—Ü–∏–π –Ω–∞ 1 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ü–∏–∫–ª –Ω–∞ —à–∞–≥ –Ω–∞–∑–∞–¥
// 	    i--;
// 	  }
// 	}
// }
// rememberMyFilms();

// function detectPersonalLevel(){

// 	if (personalMovieDB.count < 10) {
// 	  console.log("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ –¥–æ–≤–æ–ª—å–Ω–æ –º–∞–ª–æ —Ñ–∏–ª—å–º–æ–≤");
// 	} else if(personalMovieDB.count >= 10 && personalMovieDB.count < 30){
// 	  console.log("–í—ã –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∑—Ä–∏—Ç–µ–ª—å");
// 	} else if (personalMovieDB.count >= 30){
// 	  console.log("–í—ã –∫–∏–Ω–æ–º–∞–Ω");
// 	} else{
// 	  console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞");
// 	}
// }
// detectPersonalLevel();

// function showMyDB(hidden) {
// 	if (!hidden){
// 		console.log(personalMovieDB);
// 	}
// }
// showMyDB(personalMovieDB.privat);

// function writeYourGenres(){
// 	for (let i = 1; i <= 3; i++) {
// 		personalMovieDB.genres.push(prompt(`–í–∞—à –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º ${i}?`, ''));
// 	}
// }
// writeYourGenres();

// console.log(personalMovieDB);

////////////////////////////////////////////
// Coding Exercise 10: –ó–∞–¥–∞—á–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –æ–±—ä–µ–∫—Ç–∞–º–∏

// const personalPlanPeter = {
//     name: "Peter",
//     age: "29",
//     skills: {
//         languages: ['ru', 'eng'],
//         programmingLangs: {
//             js: '20%',
//             php: '10%'
//         },
//         exp: '1 month'
//     },
//      showAgeAndLangs: function(plan) {
//         const {age} = plan;
//         const {languages} = plan.skills;
//         let str = `–ú–Ω–µ ${age} –∏ —è –≤–ª–∞–¥–µ—é —è–∑—ã–∫–∞–º–∏: `;

//         languages.forEach(function(lang) {
//             str += `${lang.toUpperCase()} `;
//         });

//         return str;
//     }
// };

// function showExperience(plan) {
// 	const str = plan.skills.exp;
// 	console.log(str);

// 	return str;
// 	// return `${plan.skills.exp}`

// };

// showExperience(personalPlanPeter);

// function showProgrammingLangs(plan) {
// 	let str = '';
//     const {programmingLangs} = plan.skills;
//     for (let key in programmingLangs) {
//         str += `–Ø–∑—ã–∫ ${key} –∏–∑—É—á–µ–Ω –Ω–∞ ${programmingLangs[key]}\n`
//     }

//     return str;

// }
// showProgrammingLangs(personalPlanPeter);

// 1) –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é showExperience, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è –æ–±—ä–µ–∫—Ç —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É —Å –æ–ø—ã—Ç–æ–º.

// –ü—Ä–∏–º–µ—Ä:

// showExperience(personalPlanPeter) => '1 month'

// P.S. –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é, –Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ

// 2) –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é showProgrammingLangs, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è –æ–±—ä–µ–∫—Ç —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ –Ω—É–∂–Ω–æ–º –≤–∏–¥–µ.

// –ü—Ä–∏–º–µ—Ä:

// showProgrammingLangs(personalPlanPeter)  =>

// "–Ø–∑—ã–∫ js –∏–∑—É—á–µ–Ω –Ω–∞ 20% –Ø–∑—ã–∫ php –∏–∑—É—á–µ–Ω –Ω–∞ 10%"

// –ü—Ä–∏—á–µ–º —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —è–∑—ã–∫–æ–≤. –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –Ω–µ —É–∫–∞–∑–∞–Ω, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞.

// P.S. –î–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è \n –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏.

// 3) –°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥ showAgeAndLangs –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞ personalPlanPeter. –ü—Ä–∏ –µ–≥–æ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è –æ–±—ä–µ–∫—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ –Ω—É–∂–Ω–æ–º –≤–∏–¥–µ.

// –ü—Ä–∏–º–µ—Ä:

// personalPlanPeter.showAgeAndLangs(personalPlanPeter)
// => '–ú–Ω–µ 29 –∏ —è –≤–ª–∞–¥–µ—é —è–∑—ã–∫–∞–º–∏: RU ENG'

// –ó–∞–º–µ—Ç—å—Ç–µ, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –∏ —è–∑—ã–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ –æ–±—ä–µ–∫—Ç–∞, –∞ —è–∑—ã–∫–∏ –≤—Å–µ–≥–¥–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ (–±–æ–ª—å—à–∏–º–∏ –±—É–∫–≤–∞–º–∏). –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –æ–±—ä–µ–∫—Ç–µ –ø–æ–º–µ–Ω—è—é—Ç—Å—è, —Ç–æ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–∂–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è.

////////////////////////////////////////////////////////////////////////////////////////
// Coding Exercise 11: –ó–∞–¥–∞—á–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –º–∞—Å—Å–∏–≤–∞–º–∏

// 1) –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é showFamily, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.

// showFamily(family)  => '–°–µ–º—å—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑: Peter Ann Alex Linda'

// –ò–º–µ–Ω–∞ –ø–æ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞. –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π, —Ç–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ '–°–µ–º—å—è –ø—É—Å—Ç–∞'

// 2) –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é standardizeStrings, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫
// –∏ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.

// –ü—Ä–∏–º–µ—Ä:

// standardizeStrings(favoriteCities)  –≤—ã–≤–µ–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å

// lisbon
// rome
// milan
// dublin
// –≠—Ç–æ —á–∞—Å—Ç–∞—è –∑–∞–¥–∞—á–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏, —Ç–∞–∫ –∫–∞–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–º –º–æ–≥—É—Ç –ø—Ä–∏–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã
// –≤ —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö. –í —Ç–æ–º —á–∏—Å–ª–µ –∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏ :) –ü–æ—ç—Ç–æ–º—É –Ω–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫–∏
// –≤ –æ–¥–∏–Ω —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã.


// const family = ['Peter', 'Ann', 'Alex', 'Linda'];

// function showFamily(arr) {
//     let str = '–°–µ–º—å—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑:';
//     let arrStr = '';

//     if (!arr.length){
//         return '–°–µ–º—å—è –ø—É—Å—Ç–∞';
//     } else {

//     arr.forEach((e) => {
//     	arrStr+= ` ${e}`
//     	return arrStr;
//     } )

//     str+= arrStr;
//     console.log(str);
//     return str;
//     }
// }
// showFamily(family);

// const favoriteCities = ['liSBon', 'ROME', 'miLan', 'Dublin'];

// function standardizeStrings(arr) {
//     const lowArr = arr.map((e) =>e.toLowerCase());

//     lowArr.forEach(e => console.log(e));
// }

// standardizeStrings(favoriteCities);

///////////////////////////////////////////
// Coding Exercise 12: –ó–∞–¥–∞—á–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –º–∞—Å—Å–∏–≤–∞–º–∏, —á–∞—Å—Ç—å 2

// 3) –ó–∞–¥–∞—á–∞ —Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é reverse, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è —Å—Ç—Ä–æ–∫—É
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

// –ü—Ä–∏–º–µ—Ä:

// const someString = 'This is some strange string';
// reverse(someString) => 'gnirts egnarts emos si sihT'

// –§—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫ –ª—é–±–æ–π —Å—Ç—Ä–æ–∫–µ. –ï—Å–ª–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–µ —Å—Ç—Ä–æ–∫–∞ - –≤–µ—Ä–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ "–û—à–∏–±–∫–∞!"

// –≠—Ç–æ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∑–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏. –ï—ë –¥–∞—é—Ç –¥–ª—è —Ç–æ–≥–æ,
// —á—Ç–æ–±—ã –æ—Ü–µ–Ω–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –∏ –∑–Ω–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫ –æ–Ω –¥—É–º–∞–µ—Ç. –ö–∞–∫ –Ω–µ–±–æ–ª—å—à–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞,
// –µ—Å—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤–∞–º –ø–æ–º–æ—á—å. –ò —á–∞—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ—à–µ–Ω–∏—è –º—ã —Ç–æ–∂–µ –∏–∑—É—á–∏–º –≤ —Ç–µ—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞.

// –ú–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å —Å–ª–æ–∂–Ω–æ–π —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∑–≥–ª—è–¥–∞, –Ω–æ —ç—Ç–æ —Å–æ–≤—Å–µ–º –Ω–µ —Ç–∞–∫ üôÇ

// 4) –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Ç–∞–∫—É—é —Ä–µ–∞–ª—å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é. –£ –≤–∞—Å –µ—Å—Ç—å –±–∞–Ω–∫–æ–º–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–µ—Ç –¥–µ–Ω—å–≥–∏ –∏–∑ –¥–≤—É—Ö —Ä–∞–∑–Ω—ã—Ö
//  –±–∞–Ω–∫–æ–≤ –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö. –û–¥–∏–Ω –±–∞–Ω–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å –±–∞–∑–æ–≤—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏, –≤—Ç–æ—Ä–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å –ø—Ä–æ—á–∏–º–∏ –≤–∞–ª—é—Ç–∞–º–∏:

// const baseCurrencies = ['USD', 'EUR'];
// const additionalCurrencies = ['UAH', 'RUB', 'CNY'];
// –í–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –±–∞–Ω–∫–æ–º–∞—Ç–∞ availableCurr, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞: –ø–µ—Ä–≤—ã–π -
// —ç—Ç–æ –º–∞—Å—Å–∏–≤ —Å–æ –≤—Å–µ–º–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏ –∏–∑ –¥–≤—É—Ö –±–∞–Ω–∫–æ–≤ —Å—Ä–∞–∑—É
// (—Å–µ–π—á–∞—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ –æ–Ω–∏ –Ω–µ –º–æ–≥—É—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è), –≤—Ç–æ—Ä–æ–π - –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç
// —Ç—É –≤–∞–ª—é—Ç—É, –∫–æ—Ç–æ—Ä–∞—è —Å–µ–π—á–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –≤ –±–∞–Ω–∫–æ–º–∞—Ç–µ. –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –≤ –ø–µ—Ä–≤–æ–º –∞—Ä–≥—É–º–µ–Ω—Ç–µ –ø—É—Å—Ç–æ–π - —Ç–æ
// —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç'. –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –Ω—É–∂–Ω–æ–º –≤–∏–¥–µ.

// –ü—Ä–∏–º–µ—Ä:

// availableCurr(['UAH', 'RUB', 'CNY'], 'CNY')
// –í–µ—Ä–Ω–µ—Ç —Å—Ç—Ä–æ–∫—É:

// –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:
// UAH
// RUB
// –ó–∞–º–µ—Ç—å—Ç–µ:

// - CNY (—é–∞–Ω—å) –∏—Å—á–µ–∑ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤–∞–ª—é—Ç, –∑–Ω–∞—á–∏—Ç —Ç–∞–∫–∞—è –≤–∞–ª—é—Ç–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å

// - –ü–æ—Å–ª–µ –≤–∞–ª—é—Ç—ã: —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ \n, –∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –≤–∞–ª—é—Ç—ã —Ç–æ–∂–µ.
// –≠—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤

// - –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å—Ä–∞–∑—É –∏–∑ –¥–≤—É—Ö –±–∞–Ω–∫–æ–≤,
// –ø—Ä–∏—á–µ–º —Å–Ω–∞—á–∞–ª–∞ baseCurrencies, –ø–æ—Ç–æ–º additionalCurrencies –ø–æ –ø–æ—Ä—è–¥–∫—É



// const someString = 'This is some strange string';

// function reverse(str) {
//   let reversedStr = '';

//   if (typeof str !== 'string') {
//     return "–û—à–∏–±–∫–∞!"
//   } else {

//     for (let i = str.length - 1; i >= 0; i--) {
//       reversedStr += str[i];
//     }
//     console.log(reversedStr);
//     return reversedStr;
//   }
// }
// reverse(someString)

// const baseCurrencies = ['USD', 'EUR'];
// const additionalCurrencies = ['UAH', 'RUB', 'CNY'];

// function availableCurr(arr, missingCurr) {
//   let str = '';
//   arr.length === 0 ? str = '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç' : str = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:\n';

//   arr.forEach(function (curr, i) {
//     if (curr !== missingCurr) {
//       str += `${curr}\n`;
//     }
//   });

//   return str;

// }
// availableCurr([...baseCurrencies, ...additionalCurrencies], 'CNY')


/* –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ —É—Ä–æ–∫:

1) –£ –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–∞–±–æ—á–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —Å–æ—Å—Ç–æ—è—â–µ–µ –∏–∑ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π. –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ
–ø–µ—Ä–µ–¥ –≤–∞–º–∏ —Å—Ç–æ–∏—Ç –∑–∞–¥–∞—á–∞ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –µ–≥–æ —Ç–∞–∫, —á—Ç–æ–±—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ç–∞–ª–∏ –º–µ—Ç–æ–¥–∞–º–∏ –æ–±—ä–µ–∫—Ç–∞ personalMovieDB
–¢–∞–∫–æ–µ —Å–ª—É—á–∞–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏–ª–∏ –ø–æ–¥—Ö–æ–¥–∞ –∫ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã

2) –°–æ–∑–¥–∞—Ç—å –º–µ—Ç–æ–¥ toggleVisibleMyDB, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ privat. –ï—Å–ª–∏ –æ–Ω–æ false - –æ–Ω
–ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –µ–≥–æ –≤ true, –µ—Å–ª–∏ true - –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≤ false. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å showMyDB.

3) –í –º–µ—Ç–æ–¥–µ writeYourGenres –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–æ—Ç–º–µ–Ω–∞" –∏–ª–∏ –æ—Å—Ç–∞–≤–ª—è—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É.
–ï—Å–ª–∏ –æ–Ω —ç—Ç–æ —Å–¥–µ–ª–∞–ª - –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –µ–≥–æ –∫ —ç—Ç–æ–º—É –∂–µ –≤–æ–ø—Ä–æ—Å—É. –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—Å–µ –∂–∞–Ω—Ä—ã –≤–≤–µ–¥–µ–Ω—ã -
–ø—Ä–∏ –ø–æ–º–æ—â–∏ –º–µ—Ç–æ–¥–∞ forEach –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ:
"–õ—é–±–∏–º—ã–π –∂–∞–Ω—Ä #(–Ω–æ–º–µ—Ä –ø–æ –ø–æ—Ä—è–¥–∫—É, –Ω–∞—á–∏–Ω–∞—è —Å 1) - —ç—Ç–æ (–Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞)"*/


////////////////////////////////////////////

// const personalMovieDB = {
//     count: 0,
//     movies: {},
//     actors: {},
//     genres: [],
//     privat: false,
//     start: function(){
// 		personalMovieDB.count = +prompt('–°–∫–æ–ª—å–∫–æ —Ñ–∏–ª—å–º–æ–≤ –≤—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏?', '');

// 		while(personalMovieDB.count == '' || personalMovieDB.count == null || isNaN(personalMovieDB.count)) {
// 			personalMovieDB.count = +prompt('–°–∫–æ–ª—å–∫–æ —Ñ–∏–ª—å–º–æ–≤ –≤—ã —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏?', '');
// 		}
// 	},
//     rememberMyFilms: function(){
// 		for (let i = 0; i < 2; i++){

// 		  const a = prompt('–û–¥–∏–Ω –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤?', '').trim(),
// 		        b = prompt('–ù–∞ —Å–∫–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∏—Ç–µ –µ–≥–æ?', '');

// 		  if (a != null && b != null && a != '' && b != '' && a.length < 50 ){
// 		    personalMovieDB.movies[a] = b;
// 		    console.log('done');
// 		  } else {
// 		    console.log('error');
// 		    // –ü—Ä–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–∏–∏ –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ —É—Å–ª–æ–≤–∏–π –º—ã:
// 		    // –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —É–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
// 		    // –∏—Ç–µ—Ä–∞—Ü–∏–π –Ω–∞ 1 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ü–∏–∫–ª –Ω–∞ —à–∞–≥ –Ω–∞–∑–∞–¥
// 		    i--;
// 		  }
// 		}
// 	},
//     detectPersonalLevel: function(){
// 		if (personalMovieDB.count < 10) {
// 		  console.log("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ –¥–æ–≤–æ–ª—å–Ω–æ –º–∞–ª–æ —Ñ–∏–ª—å–º–æ–≤");
// 		} else if(personalMovieDB.count >= 10 && personalMovieDB.count < 30){
// 		  console.log("–í—ã –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∑—Ä–∏—Ç–µ–ª—å");
// 		} else if (personalMovieDB.count >= 30){
// 		  console.log("–í—ã –∫–∏–Ω–æ–º–∞–Ω");
// 		} else{
// 		  console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞");
// 		}
// 	},
//     showMyDB: function(hidden) {
// 		// if (personalMovieDB.privat){
// 		if (!hidden){
// 			console.log(personalMovieDB);
// 		}
// 	},
// 	toggleVisibleMyDB: function(){
// 	 	if (personalMovieDB.privat){
// 	 		personalMovieDB.privat = false;
// 	 	} else {
// 	 		personalMovieDB.privat = true;
// 	 	}
// 	},
//     writeYourGenres: function(){
// 		for (let i = 1; i < 2; i++) {

// 			// –í–∞—Ä–∏–∞–Ω—Ç 1
// 			// let genre = prompt(`–í–∞—à –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º ${i}?`, '');

// 			// if (genre === '' || genre === null){
// 			// 	console.log('You enter wrong data or did not enter any!');
// 			// 	i--;
// 			// } else {
// 			// 	personalMovieDB.genres[i - 1] = genre;
// 			// }

// 			// –í–∞—Ä–∏–∞–Ω—Ç 2
// 			let genres = prompt(`–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ –∂–∞–Ω—Ä—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é`).toLowerCase();

// 			if (genres === '' || genres === null){
// 				console.log('You enter wrong data or did not enter any!');
// 				i--;
// 			} else {
// 				personalMovieDB.genres = genres.split(',');
// 				personalMovieDB.genres.sort();
// 			}
// 		}

// 		personalMovieDB.genres.forEach((item, i) => {
// 			console.log(`–õ—é–±–∏–º—ã–π –∂–∞–Ω—Ä ${i + 1} - —ç—Ç–æ ${item}`);
// 		})
// 	},
// };

//////////////////////////////////////////////////////////////////////
/////////////////////////
// –ó–∞–¥–∞—á–∞:

// –£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –∫—É—Å–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ—Ä–≥–æ–≤–æ–º —Ü–µ–Ω—Ç—Ä–µ,
// –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –æ–±—ä–µ–∫—Ç–µ shoppingMallData.
// –û–Ω–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –º–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö,
// –≥–¥–µ —É–∫–∞–∑–∞–Ω–∞ –¥–ª–∏–Ω–∞ –∏ —à–∏—Ä–∏–Ω–∞ –ø–æ–º–µ—â–µ–Ω–∏—è; –≤—ã—Å–æ—Ç—É –ø–æ–º–µ—â–µ–Ω–∏—è;
// —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∑–∞ 1 –∫—É–±–∏—á–µ—Å–∫–∏–π –º–µ—Ç—Ä –∏
//  –±—é–¥–∂–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∑–∞ –º–µ—Å—è—Ü.

// –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ - —ç—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é isBudgetEnough,
//  –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É. –ï—Å–ª–∏ –±—é–¥–∂–µ—Ç–∞ —Ö–≤–∞—Ç–∞–µ—Ç –¥–ª—è –æ—Ç–æ–ø–ª–µ–Ω–∏—è
//  –≤—Å–µ–≥–æ –æ–±—ä–µ–º–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ - –≤—ã–≤–æ–¥–∏—Ç—Å—è '–ë—é–¥–∂–µ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ',
//  –µ—Å–ª–∏ –Ω–µ—Ç - '–ë—é–¥–∂–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ'. –ò –≤—Å–µ üôÇ

// –ù–æ —ç—Ç–∞ –∑–∞–¥–∞—á–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–¥–∑–∞–¥–∞—á –≤–Ω—É—Ç—Ä–∏:

// - –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–π –ø–ª–æ—â–∞–¥–∏ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤,
// –∫–æ—Ç–æ—Ä–∞—è –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –∫–∞–∫ –¥–ª–∏–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞, —É–º–Ω–æ–∂–µ–Ω–Ω–∞—è –Ω–∞ –µ–≥–æ —à–∏—Ä–∏–Ω—É;

// - –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –æ–±—ä–µ–º–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞,
// —Ç–∞–∫ –∫–∞–∫ —Ü–µ–Ω–∞ –æ—Ç–æ–ø–ª–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–∞ –≤ –∫—É–±–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç—Ä–∞—Ö;

// - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–≥–æ, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–º–∞;

// - –≤—Å–µ —á–∏—Å–ª–∞ –∏–¥—É—Ç –±–µ–∑ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è, –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—ã –∏ –≤—Å–µ;

// - —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å,
// –¥–∞–∂–µ –µ—Å–ª–∏ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≤—ã—Å–æ—Ç–∞,
// –±—é–¥–∂–µ—Ç –∏–ª–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤–æ–æ–±—â–µ –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç.

// const shoppingMallData = {
//     shops: [
//         {
//             width: 10,
//             length: 5
//         },
//         {
//             width: 15,
//             length: 7
//         },
//         {
//             width: 20,
//             length: 5
//         },
//         {
//             width: 8,
//             length: 10
//         }
//     ],
//     height: 5,
//     moneyPer1m3: 30,
//     budget: 500
// }

// function isBudgetEnough(data) {

//     let square = 0;

//     let fullSize = 0;

//     data.shops.forEach(shop => {
//     	// –ü—Ä–æ—Ö–æ–¥–∏–º —Ü–∏–∫–ª–æ–º –º–∞—Å—Å–∏–≤ shops –∏ –≤—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é –ø–ª–æ—â–∞–¥—å –º–∞–≥–∞–∑–∏–Ω–æ–≤.
//     square += shop.width * shop.length

//     });
//     	// –í—ã—á–∏—Å–ª—è–µ–º –æ–±—ä–µ–º —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞
//     fullSize = square * data.height;

//      return fullSize * data.moneyPer1m3 > data.budget? '–ë—é–¥–∂–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ' : '–ë—é–¥–∂–µ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ'
// }

// isBudgetEnough(shoppingMallData);

///////////////////////////////////////////////////////////////////////////
///////////////////////////
// –ó–∞–¥–∞—á–∞

// –£ –≤–∞—Å –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É:

// const students = ['Peter', 'Andrew', 'Ann', 'Mark', 'Josh',
// 'Sandra', 'Cris', 'Bernard', 'Takesi', 'Sam'];
// –ù–æ –∫–æ–º–∞–Ω–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ 3 –ø–æ 3 —á–µ–ª–æ–≤–µ–∫–∞.
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é sortStudentsByGroups,
// –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.

// –í–Ω—É—Ç—Ä–∏ –æ–Ω–∞ —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏–º–µ–Ω–∞ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É.
//  –ó–∞—Ç–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç —É—á–µ–Ω–∏–∫–æ–≤ –ø–æ 3 —á–µ–ª–æ–≤–µ–∫–∞ –≤ 3 –≥—Ä—É–ø–ø—ã –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É.
//  –≠—Ç–∏ –≥—Ä—É–ø–ø—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–∞—Å—Å–∏–≤–∞–º–∏. –ö–∞–∫ –∏—Ç–æ–≥,
//  —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å —Ç—Ä–µ–º—è –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ —Å—Ç—Ä–æ–∫–æ–π –∫–∞–∫ 4–π —ç–ª–µ–º–µ–Ω—Ç.

// –ü—Ä–∏–º–µ—Ä:

// sortStudentsByGroups(students)  =>

// [
//   [ 'Andrew', 'Ann', 'Bernard' ],
//   [ 'Cris', 'Josh', 'Mark' ],
//   [ 'Peter', 'Sam', 'Sandra' ],
//   '–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: Takesi'
// ]
// –ï—Å–ª–∏ —É–±—Ä–∞—Ç—å –æ–¥–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç:

// [
//   [ 'Andrew', 'Ann', 'Bernard' ],
//   [ 'Cris', 'Josh', 'Mark' ],
//   [ 'Peter', 'Sam', 'Sandra' ],
//   '–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: -'
// ]
// –ê –µ—Å–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –æ–¥–Ω–æ–≥–æ, —Ç–æ:

// [
//   [ 'Andrew', 'Ann', 'Bernard' ],
//   [ 'Cris', 'Josh', 'Mark' ],
//   [ 'Peter', 'Sam', 'Sandra' ],
//   '–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: Takesi, Somebody'
// ]
// –¢–æ –µ—Å—Ç—å, –º–µ–Ω—è–µ—Ç—Å—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–æ–∫–∏. –í—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —É—á–µ–Ω–∏–∫–∏ –ø–æ–ø–∞–¥–∞—é—Ç —Ç—É–¥–∞.

// –ó–∞–¥–∞—á–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è, –Ω–µ–º–Ω–æ–≥–æ –∑–∞–∫–æ–≤—ã—Ä–∏—Å—Ç–∞—è,
// –Ω–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –Ω–µ—ë –º—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏.
// –ü—Ä–æ—Å—Ç–æ —Ä–∞—Å–ø–∏—à–∏—Ç–µ –ª–æ–≥–∏–∫—É –¥–µ–π—Å—Ç–≤–∏–π —Å—Ç—Ä–æ–∫–∞ –∑–∞ —Å—Ç—Ä–æ–∫–æ–π.

// const students = ['Peter', 'Andrew', 'Ann', 'Mark', 'Josh', 'Sandra', 'Cris', 'Bernard', 'Takesi', 'Sam'];

// const students = ['Peter', 'Andrew', 'Ann', 'Mark', 'Josh', 'Sandra', 'Cris', 'Bernard', 'Takesi', 'Sam'];

// function sortStudentsByGroups(arr) {
// 	arr.sort();
// 	let arrGroup = [];
// 		for (let i = 0; i < 3; i++) arrGroup.push(arr.splice(0, 3));
// 		arrGroup.push(`–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: ${!arr.length ? `-` : arr.join(", ")}`);
// 	return arrGroup;
// }

/////////////////////////////////////////////////////////////////
///////////////////////
// Coding Exercise 15: –ó–∞–¥–∞–Ω–∏—è –Ω–∞ –ø–æ–∏—Å–∫ –æ—à–∏–±–æ–∫ –≤ –∫–æ–¥–µ


// –ó–∞–¥–∞–Ω–∏–µ:

// –£ –≤–∞—Å –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ.
//  –ù–∞—á–∏–Ω–∞—é—â–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–π,
//   –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏ –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å –ø–æ—á–µ–º—É.
//   –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∏ –¥–∞–≤–∞–ª–∏ –≤—Å–µ–≥–¥–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
//    —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

// 1) –§—É–Ω–∫—Ü–∏—è isOpen –Ω–µ —Ö–æ—á–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å. –ß—Ç–æ –º—ã —É–∂–µ –Ω–µ
// –ø—Ä–æ–±–æ–≤–∞–ª–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å –≤ –Ω–µ—ë - —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å–µ –≤—Ä–µ–º—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π.
// –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—ã –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
// 1. –í —Å—Ç—Ä–æ–∫–µ return anwser; –æ–ø–µ—á–∞—Ç–∫–∞ –≤ —Å–ª–æ–≤–µ anwser. –ó–∞–º–µ–Ω–∏ —ç—Ç–æ –Ω–∞ answer, —á—Ç–æ–±—ã –≤–æ–∑–≤—Ä–∞—â–∞–ª–æ—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
// 2. –ü—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ isOpen –ø–µ—Ä–µ–¥–∞–π restorantData.openNow –≤–º–µ—Å—Ç–æ openNow, —á—Ç–æ–±—ã —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∏–ª–∞ –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤—É openNow –≤ –æ–±—ä–µ–∫—Ç–µ restorantData.

// 2) –§—É–Ω–∫—Ü–∏—è isAverageLunchPriceTrue –¥–æ–ª–∂–Ω–∞ –±—Ä–∞—Ç—å —Ü–µ–Ω—ã –¥–≤—É—Ö
// –ª—é–±—ã—Ö –±–ª—é–¥ –∏–∑ –º–µ–Ω—é, —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å –∏—Ö –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Å —Å—Ä–µ–¥–Ω–∏–º —á–µ–∫–æ–º
// (averageLunchPrice).

// –°–µ–π—á–∞—Å —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≤—ã–¥–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
// —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í–µ–¥—å –∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –º–µ–Ω—é —Å—É–º–º–∞ –¥–≤—É—Ö –ª—é–±—ã—Ö —Ü–µ–Ω
//  –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –±–æ–ª—å—à–µ 20. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—É –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
// –í —Å—Ç—Ä–æ–∫–µ (sDish.price) –∑–∞–º–µ–Ω–∏ –Ω–∞ (sDish.price.slice(0, -1)), —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–Ω—ã, —É–±—Ä–∞–≤ —Å–∏–º–≤–æ–ª –¥–æ–ª–ª–∞—Ä–∞ ('$') —Å –ø–æ–º–æ—â—å—é slice(0, -1).
// –í —É—Å–ª–æ–≤–∏–∏ if —Å—Ä–∞–≤–Ω–∏–≤–∞–π totalPrice —Å —á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º average, —Ç–∞–∫–∂–µ —É–¥–∞–ª—è—è —Å–∏–º–≤–æ–ª –¥–æ–ª–ª–∞—Ä–∞.
// –ü—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ isAverageLunchPriceTrue –ø–µ—Ä–µ–¥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –±–ª—é–¥–∞ –∏–∑ –º–µ–Ω—é (restorantData.menu[0] –∏ restorantData.menu[1]), –∞ –Ω–µ –æ–±—ä–µ–∫—Ç—ã –±–ª—é–¥. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞–º name –∏ price.


// 3) –§—É–Ω–∫—Ü–∏—è transferWaitors —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
//  —à–∞–±–ª–æ–Ω –¥–∞–Ω–Ω—ã—Ö –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏—Ö –≤ –¥—Ä—É–≥–æ–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω. –ö–æ–Ω–µ—á–Ω–æ,
//  –≤ –¥—Ä—É–≥–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ –±—É–¥—É—Ç –¥—Ä—É–≥–∏–µ –±–ª—é–¥–∞, –¥—Ä—É–≥–∏–µ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç—ã –∏ —Ç–ø.
//  –°–µ–π—á–∞—Å —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ –≤ –Ω–∞—á–∞–ª–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –¥–æ–ª–∂–Ω–∞ –º–µ–Ω—è—Ç—å
//  –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–≤.

// –ù–æ –≤ –Ω—ã–Ω–µ—à–Ω–µ–º –≤–∏–¥–µ –º—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏, —á—Ç–æ –ø–æ—Å–ª–µ –µ—ë –∑–∞–ø—É—Å–∫–∞
// –Ω–µ —Ç–æ–ª—å–∫–æ –∫–æ–ø–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–≤—ã—Ö –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–≤, –Ω–æ –∏
// –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ! –í restorantData —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ Alice –∏—Å—á–µ–∑–∞–µ—Ç –∏
// –∑–∞–º–µ–Ω—è–µ—Ç—Å—è Mike! –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—É –∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å,
// —á—Ç–æ–±—ã –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã.

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
// –í–º–µ—Å—Ç–æ Object.assign({}, data) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è JSON.parse(JSON.stringify(data)), —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞ data, –≤–∫–ª—é—á–∞—è –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞.
// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç copy.

// P.S. –ú–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è —Å–ª–æ–∂–Ω—ã–º, –Ω–æ –∑–∞–¥–∞—á–∞ —Ä–µ—à–∞–µ—Ç—Å—è –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ, 
// –µ—Å–ª–∏ –≤—ã –ø–æ–º–Ω–∏—Ç–µ –æ–¥–∏–Ω –ø—Ä–∏–Ω—Ü–∏–ø :)



const restorantData = {
  menu: [
    {
      name: 'Salad Caesar',
      price: '14$'
    },
    {
      name: 'Pizza Diavola',
      price: '9$'
    },
    {
      name: 'Beefsteak',
      price: '17$'
    },
    {
      name: 'Napoleon',
      price: '7$'
    }
  ],
  waitors: [
    { name: 'Alice', age: 22 }, { name: 'John', age: 24 }
  ],
  averageLunchPrice: '20$',
  openNow: true
};

function isOpen(prop) {
  let answer = '';
  prop ? answer = '–û—Ç–∫—Ä—ã—Ç–æ' : answer = '–ó–∞–∫—Ä—ã—Ç–æ';

  return answer;
}

console.log(isOpen(restorantData.openNow));

function isAverageLunchPriceTrue(fDish, sDish, average) {
  const totalPrice = +fDish.price.slice(0, -1) + +sDish.price.slice(0, -1);
  if (totalPrice < +average.slice(0, -1)) {
    return '–¶–µ–Ω–∞ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–π';
  } else {
    return '–¶–µ–Ω–∞ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π';
  }
}

console.log(isAverageLunchPriceTrue(restorantData.menu[0], restorantData.menu[1], restorantData.averageLunchPrice));


function transferWaitors(data) {
  const copy = JSON.parse(JSON.stringify(data));

  copy.waitors[0] = { name: 'Mike', age: 32 };
  return copy;
}

const updatedData = transferWaitors(restorantData);
console.log(updatedData);
















